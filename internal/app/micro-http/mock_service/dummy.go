// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/micro-http/service/dummy.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
	reflect "reflect"
)

// MockDummyAccesser is a mock of DummyAccesser interface
type MockDummyAccesser struct {
	ctrl     *gomock.Controller
	recorder *MockDummyAccesserMockRecorder
}

// MockDummyAccesserMockRecorder is the mock recorder for MockDummyAccesser
type MockDummyAccesserMockRecorder struct {
	mock *MockDummyAccesser
}

// NewMockDummyAccesser creates a new mock instance
func NewMockDummyAccesser(ctrl *gomock.Controller) *MockDummyAccesser {
	mock := &MockDummyAccesser{ctrl: ctrl}
	mock.recorder = &MockDummyAccesserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDummyAccesser) EXPECT() *MockDummyAccesserMockRecorder {
	return m.recorder
}

// GetEmployee mocks base method
func (m *MockDummyAccesser) GetEmployee(ctx echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEmployee", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetEmployee indicates an expected call of GetEmployee
func (mr *MockDummyAccesserMockRecorder) GetEmployee(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEmployee", reflect.TypeOf((*MockDummyAccesser)(nil).GetEmployee), ctx)
}

// GetEmployees mocks base method
func (m *MockDummyAccesser) GetEmployees(ctx echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEmployees", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetEmployees indicates an expected call of GetEmployees
func (mr *MockDummyAccesserMockRecorder) GetEmployees(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEmployees", reflect.TypeOf((*MockDummyAccesser)(nil).GetEmployees), ctx)
}
